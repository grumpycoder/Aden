<h3>
    @ViewBag.DisplayGroupName
</h3>

@if (!(bool)ViewBag.IsGroupDefined)
{
    <div class="row">
        <div class="col-md-12">
            <h4>Group does not exist</h4>
        </div>
    </div>
}
else
{
    <div class="row">
        <form role="form" id="groupForm">
            <input type="hidden" name="groupName" id="groupName" value="@ViewBag.GroupName" />

            <div class="col-md-12">
                <div class="form-group">


                    <label class="control-label">
                        Add member
                        <input type="text" id="email" name="email" class="form-control typeahead" data-provide="typeahead" autocomplete="off">
                    </label>
                    <button class="btn btn-default" id="btnAddGroupMember" disabled="disabled" aria-disabled="True">Add</button>
                </div>
            </div>
        </form>
    </div>

    <div class="row">
        <div class="col-md-6">
            <form id="memberForm" role="form">
                <input type="hidden" name="groupName" value="@ViewBag.GroupName" />
                <input type="hidden" name="email" id="email" />
            </form>
            <label class="control-label">
                Current Members
            </label>
            <ul class="list-group">
                @if (Enumerable.Count(ViewBag.Members) == 0)
                {
                    <li class="list-group-item">Group contains no members</li>
                }
                @foreach (var member in ViewBag.Members)
                {
                    <li class="list-group-item">
                        <a href="#" id="btnRemoveGroupMember" data-email="@member"><i class="fa fa-trash"></i></a> <span>@member</span>
                    </li>
                }
            </ul>
        </div>
    </div>
}

<script>
        
    $('input.typeahead').typeahead({
        source: function(query, response) {
            return $.get('/api/membership/users/?username=' + query,
                { query: query },
                function(data) {
                    return response(data);
                });
        },
        items: 15,
        displayText: function (item) {
            return item.firstname + ' ' + item.lastname + '(' + item.emailAddress + ')';
        },
        afterSelect: function (item) {
            this.$element[0].value = item.emailAddress;
        },
        delay: 500,
        minLength: 0,
        autoSelect: true,
    }).bind('change blur', function (e) {
        if (e.currentTarget.value === undefined || e.currentTarget.value === '') {
            $('#btnAddGroupMember').prop('disabled', true);
        } else {
            $('#btnAddGroupMember').prop('disabled', false);
        }
    });

</script>