@model Aden.Web.ViewModels.HistoryViewDto

<span class="lead">History</span>
<div id="gridHistory"></div>

<span class="lead">Submission Audit</span>
<div id="gridAudit"></div>

<script>

    var historyUri = '/api/workitem/history/' + @(Model.CurrentReportId ?? 0);

    var $gridHistory = $('#gridHistory').dxDataGrid(
        {
            dataSource: DevExpress.data.AspNet.createStore({
                key: 'id',
                loadUrl: historyUri
            }),
            remoteOperations: true,
            allowColumnResizing: true,
            noDataText: 'No History',
            showBorders: true,
            columnResizingMode: "nextColumn",
            columnMinWidth: 50,
            columnAutoWidth: true,
            height: 200,
            columns: [
                { dataField: 'actionDescription', caption: 'Task' },
                { dataField: 'assignedDate', caption: 'Assigned Date', dataType: 'datetime' },
                { dataField: 'completedDate', caption: 'Completed Date', dataType: 'datetime' },
                { dataField: 'assignedUser', caption: 'Assigned' },
                { dataField: 'status', caption: 'Status' },
                {

                    alignment: 'center',
                    cellTemplate: function (container, options) {
                        if (options.data.canReassign) {
                            $('<a/>').addClass('btn btn-default btn-sm btn-grid')
                                .text('Reassign')
                                .on('dxclick',
                                    function (e) {
                                        ShowReassign($(this), options.data);
                                    })
                                .appendTo(container);
                        }
                        if (options.data.canReviewError) {
                            $('<a/>').addClass('btn btn-default btn-sm btn-grid')
                                .text('Errors')
                                .on('dxclick',
                                    function (e) {
                                        showErrorDetails($(this), options.data);
                                    })
                                .appendTo(container);
                        }

                    }
                }
            ]
        }).dxDataGrid('instance');


    var auditUri = '/api/audit/submission/' + @(Model.SubmissionId ?? 0);

    var $gridAudit = $('#gridAudit').dxDataGrid(
        {
            dataSource: DevExpress.data.AspNet.createStore({
                key: 'id',
                loadUrl: auditUri
            }),
            remoteOperations: true,
            allowColumnResizing: true,
            noDataText: 'No Audits',
            showBorders: true,
            columnResizingMode: "nextColumn",
            columnMinWidth: 50,
            columnAutoWidth: true,
            height: 200,
            wordWrapEnabled: true,
            scrolling: { mode: "virtual", rowRenderingMode: "virtual" },
            columns: [
                { dataField: 'auditDate', caption: 'Date', dataType: 'datetime', width: 175 },
                { dataField: 'message', caption: 'Message' }
                ]
    }).dxDataGrid('instance');

    function ShowReassign(container, data) {
        var title = 'Reassign Task';

        var url = '/reassign/' + data.id;
        $.ajax({
            url: url,
            type: 'POST',
            success: function (data) {
                BootstrapDialog.show({
                    //size: BootstrapDialog.SIZE_WIDE,
                    closable: false,
                    draggable: true,
                    title: title,
                    message: $('<div></div>').load(url, function (resp, status, xhr) {
                        if (status === 'error') {
                            toastr.error('Error showing history');
                        }
                    }),
                    onshown: function (dialog) {
                        var btn = dialog.getButton(dialog.getButtons()[1].id);
                        btn.disable();
                        $(document).on('change', '#form', function () {
                            $('#form').validate({
                                rules: {
                                    AssignedUser: { required: true }
                                },
                                messages: {
                                    AssignedUser: { required: 'Assigned User is required' }
                                },
                                onfocusout: function (element) {
                                    this.element(element);
                                }
                            });
                            var form = $('#form');

                            if (form.valid()) {
                                btn.enable();
                            } else {
                                btn.disable();
                            }
                        });
                    },
                    buttons: [
                        {
                            label: 'Close',
                            action: function (dialogRef) {
                                dialogRef.close();
                            }
                        },
                        {
                            label: 'Save',
                            cssClass: 'btn-primary',
                            action: function (dialogRef) {

                                window.$showModalWorking();
                                var formData = $('form').serialize();
                                $.ajax({
                                    type: "POST",
                                    url: '/api/workitem/assign',
                                    data: model = formData
                                }).done(function (data) {
                                    toastr.success('Reassigned task');
                                    $gridAudit.refresh();
                                    $gridHistory.refresh();
                                    $gridAudit.refresh();
                                    window.assignmentUpdated = true;
                                }).fail(function (err) {
                                    toastr.error('Failed to reassign task. ');
                                }).always(function () {
                                    dialogRef.close();
                                    window.$hideModalWorking();
                                });

                            }
                        }
                    ]
                });

            },
            error: function (err) {
                toastr.error('Error showing reassignment');
            }
        });
    };

    function showErrorDetails(container, data) {
        var title = 'Error Details';
        var url = '/home/workitemimages/' + data.id;

        BootstrapDialog.show({
            size: window.BootstrapDialog.SIZE_WIDE,
            draggable: true,
            title: title,
            message: $('<div></div>').load(url, function (resp, status, xhr) {
                if (status === 'error') {
                    toastr.error('Error showing report error images');
                }
            }),
            buttons: [
                {
                    label: 'Close',
                    action: function (dialogRef) {
                        dialogRef.close();
                    }
                }
            ]
        });

    }

</script>