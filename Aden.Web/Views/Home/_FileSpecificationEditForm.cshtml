@model Aden.Web.ViewModels.UpdateFileSpecificationDto
<style>
    /* BEGIN: Check box in Button Styles */
    .checkbox .btn,
    .checkbox-inline .btn {
        padding-left: 2em;
        min-width: 10em;
    }

    .checkbox-inline {
        margin-left: -1.5em;
    }

        .checkbox label,
        .checkbox-inline label {
            text-align: left;
        }
    /* END: Check box in Button Styles */
</style>
<form id="form" name="form" role="form">
    <div id="error">

    </div>

    <div class="row">
        <div class="col-md-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label full-width">
                    File Number
                    <input type="text" name="fileNumber" id="fileNumber" value="@Model.FileNumber" 
                           class="form-control"
                           autofocus="autofocus"
                           required
                           aria-required="true"
                           data-val-required="File Number is required" />
                    <p class="" data-valmsg-for="fileNumber" data-valmsg-replace="true"></p>
                </label>
                @Html.ValidationMessageFor(model => model.FileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label full-width">
                    File Name
                    <input type="text" name="fileName" id="fileName" value="@Model.FileName"
                           class="form-control"
                           autofocus="autofocus"
                           required
                           aria-required="true"
                           data-val-required="File Name is required" />
                    <p class="" data-valmsg-for="fileName" data-valmsg-replace="true"></p>
                </label>
                @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <fieldset>
        <legend>
            Sources
        </legend>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Section
                        @Html.TextBoxFor(model => model.Section, new { @class = "form-control", autofocus = "autofocus" })
                    </label>
                    @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Application
                        @Html.DropDownListFor(m => m.Application, new SelectList(ViewBag.Applications, "Value", "Text"), "Select Application", new { @class = "form-control" })
                    </label>
                    @Html.ValidationMessageFor(model => model.Application, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Select group members
                        <button class="btn btn-info btn-block" data-membership id="btnGenerationGroup" data-group-id="@Model.GenerationGroupId" @(Model.GenerationGroupId == null ? "disabled='disabled'" : "")>
                            @(Model.GenerationGroupId == null ? "Not a valid group" : $"Generation Group Members ({Model?.GenerationGroup?.Users?.Count ?? 0})")
                        </button>
                    </label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">

                    <label class="control-label full-width">
                        Collection
                        @Html.DropDownListFor(m => m.Collection, new SelectList(ViewBag.Collections, "Value", "Text"), "Select Collection", new { @class = "form-control" })
                    </label>
                    @Html.ValidationMessageFor(model => model.Collection, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Select group members
                        <button class="btn btn-info btn-block" data-membership id="btnApprovalGroup" data-group-id="@Model.ApprovalGroupId" @(Model.ApprovalGroupId == null ? "disabled='disabled'" : "")>
                            
                            @(Model.ApprovalGroupId == null ? "Not a valid group" : $"Approval Group Members ({Model.ApprovalGroup?.Users?.Count ?? 0})")

                        </button>
                    </label>
                </div>
            </div>

            <div class="col-md-6">

                <div class="form-group">

                    <label class="control-label full-width">
                        Support Group Members
                        @Html.DropDownListFor(m => m.SupportGroup, new SelectList(ViewBag.DataGroups, "Value", "Text"), "Select Group", new { @class = "form-control" })
                    </label>
                    @Html.ValidationMessageFor(model => model.SupportGroup, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Select group members
                        <button class="btn btn-info btn-block" data-membership id="btnSubmissionGroupGroup" data-group-id="@Model.SubmissionGroupId" @(Model.SubmissionGroupId == null ? "disabled='disabled'" : "")>
                            @(Model.SubmissionGroupId == null ? "Not a valid group" : $"Submission Group Members ({Model?.SubmissionGroup?.Users?.Count ?? 0})")
                        </button>
                    </label>
                </div>
            </div>
        </div>

    </fieldset>


    @*<fieldset class="@(User.IsInRole(Constants.Administrators) ? "show" : "hidden")">*@
    <fieldset>
        <legend>Responsible User Groups</legend>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Generation User Group
                        @Html.DropDownListFor(m => m.GenerationGroupId, new SelectList(ViewBag.Groups, "Value", "Text"), "Select Group", new { @class = "form-control" })
                    </label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Approval User Group
                        @Html.DropDownListFor(m => m.ApprovalGroupId, new SelectList(ViewBag.Groups, "Value", "Text"), "Select Group", new { @class = "form-control" })
                      </label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Submission User Group
                        @Html.DropDownListFor(m => m.SubmissionGroupId, new SelectList(ViewBag.Groups, "Value", "Text"), "Select Group", new { @class = "form-control" })
                    </label>
                </div>
            </div>
        </div>

    </fieldset>


    <fieldset class="@(User.IsInRole(Constants.Administrators) ? "show" : "hidden")">
        <legend>Generation Properties</legend>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">

                    <label class="control-label full-width">
                        File Name Format
                        @Html.TextBoxFor(model => model.FileNameFormat, new {@class = "form-control", autofocus = "autofocus"})
                    </label>
                    @Html.ValidationMessageFor(model => model.FileNameFormat, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label full-width">
                        Report Action
                        @Html.TextBoxFor(model => model.ReportAction, new {@class = "form-control"})
                    </label>
                    @Html.ValidationMessageFor(model => model.ReportAction, "", new {@class = "text-danger"})
                </div>
            </div>

        </div>
    </fieldset>


</form>

<script>

    $('[data-membership]').on('click',
            function(e) {
                e.preventDefault();
                var id = $(this).data('group-id'); 
                var url = '/home/EditGroupMembership/' + id;
                var title = 'Edit Group Members';

                BootstrapDialog.show({
                    size: BootstrapDialog.SIZE_NORMAL,
                    closable: true,
                    closeByBackdrop: false,
                    closeByKeyboard: false,
                    title: title,
                    message: $('<div></div>').load(url, function (resp, status, xhr) {
                        if (status === 'error') {
                            toastr.error('Error showing group membership');
                        }
                    }),
                    buttons: [
                        {
                            label: 'Close',
                            action: function (dialogRef) {
                                dialogRef.close();
                            }
                        }
                    ]
                });

            });



</script>