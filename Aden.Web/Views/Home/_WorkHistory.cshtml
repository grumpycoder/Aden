@model int

<span class="lead">Work History</span>
<div id="gridHistory-@Model"></div>

<script src="~/js/vendor-bundle.min.js?v=1.0.0"></script>

<script>
    $(function () {
        var historyUri = '/api/workitem/history/' + @Model;

        $('#gridHistory-@Model').dxDataGrid(
        {
            dataSource: DevExpress.data.AspNet.createStore({
                key: 'id',
                loadUrl: historyUri
            }),
            remoteOperations: true,
            allowColumnResizing: true,
            noDataText: 'No History',
            showBorders: true,
            columnResizingMode: "nextColumn",
            columnMinWidth: 50,
            columnAutoWidth: true,
            height: 200,
            columns: [
                { dataField: 'actionDescription', caption: 'Task' },
                { dataField: 'assignedDate', caption: 'Assigned Date', dataType: 'datetime' },
                { dataField: 'completedDate', caption: 'Completed Date', dataType: 'datetime' },
                { dataField: 'assignedUser', caption: 'Assigned' },
                { dataField: 'status', caption: 'Status' },
                {

                    alignment: 'center',
                    cellTemplate: function (container, options) {
                        if (options.data.canReassign) {
                            $('<a/>').addClass('btn btn-default btn-sm btn-grid')
                                .text('Reassign')
                                .on('dxclick',
                                    function (e) {
                                        ShowReassign($(this), options.data);
                                    })
                                .appendTo(container);
                        }
                        if (options.data.canReviewError) {
                            $('<a/>').addClass('btn btn-default btn-sm btn-grid')
                                .text('Errors')
                                .on('dxclick',
                                    function (e) {
                                        showErrorDetails($(this), options.data);
                                    })
                                .appendTo(container);
                        }

                    }
                }
            ]
        }).dxDataGrid('instance');

        function showErrorDetails(container, data) {
            var title = 'Error Details';
            var url = '/home/workitemimages/' + data.id;

            BootstrapDialog.show({
                size: window.BootstrapDialog.SIZE_WIDE,
                draggable: true,
                title: title,
                message: $('<div></div>').load(url, function (resp, status, xhr) {
                    if (status === 'error') {
                        toastr.error('Error showing report error images');
                    }
                }),
                buttons: [
                    {
                        label: 'Close',
                        action: function (dialogRef) {
                            dialogRef.close();
                        }
                    }
                ]
            });

        }

    });
</script>


